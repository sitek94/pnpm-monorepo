name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      nestjs: ${{ steps.filter.outputs.nestjs }}
      remix: ${{ steps.filter.outputs.remix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            nestjs:
              - 'apps/nestjs/**'
              - 'libs/types/**'
            remix:
              - 'apps/remix/**'
              - 'apps/types/**'

  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build

  deploy-nestjs:
    name: Deploy NestJS App
    needs: [changes, validate]
    if: needs.changes.outputs.nestjs == 'true' && github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v1.4

      - name: 🚀 Deploy
        run: flyctl deploy --config ./apps/nestjs/fly.toml --dockerfile ./apps/nestjs/Dockerfile --remote-only --build-arg COMMIT_SHA=${{ github.sha }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-remix:
    name: Deploy Remix App
    needs: [changes, validate]
    if: needs.changes.outputs.remix == 'true' && github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v1.4

      - name: 🚀 Deploy
        run: flyctl deploy --config ./apps/remix/fly.toml --dockerfile ./apps/remix/Dockerfile --remote-only --build-arg COMMIT_SHA=${{ github.sha }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
